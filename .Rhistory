NULL,
xlim=range(year),
ylim=c(100,200),
xlab="year",
ylab="height")
for (i in 1:N) curve(a[i]+b[i]*(x),
from=min(year),
to=max(year),
add=TRUE,
col=col.alpha("black", 0.2))
b = rlnorm(N, 2, 0.5)
sigma = runif(N, 0, 1)
mu = a+b*year
h = rnorm(N, mu, sigma)
plot(
NULL,
xlim=range(year),
ylim=c(100,200),
xlab="year",
ylab="height")
for (i in 1:N) curve(a[i]+b[i]*(x),
from=min(year),
to=max(year),
add=TRUE,
col=col.alpha("black", 0.2))
dens(rlnorm(1e5, 2, 0.5))
mean(rlnorm(1e5, 2, 0.5))
log(2)
exp(2)
sigma = runif(N, 10, 1)
mu = a+b*year
h = rnorm(N, mu, sigma)
plot(
NULL,
xlim=range(year),
ylim=c(100,200),
xlab="year",
ylab="height")
sigma = runif(N, 1, 10)
mu = a+b*year
h = rnorm(N, mu, sigma)
plot(
NULL,
xlim=range(year),
ylim=c(100,200),
xlab="year",
ylab="height")
for (i in 1:N) curve(a[i]+b[i]*(x),
from=min(year),
to=max(year),
add=TRUE,
col=col.alpha("black", 0.2))
sigma = runif(N, 1, 1000)
plot(
NULL,
xlim=range(year),
ylim=c(100,200),
xlab="year",
ylab="height")
for (i in 1:N) curve(a[i]+b[i]*(x),
from=min(year),
to=max(year),
add=TRUE,
col=col.alpha("black", 0.2))
h = rnorm(N, mu, sigma)
plot(
NULL,
xlim=range(year),
ylim=c(100,200),
xlab="year",
ylab="height")
for (i in 1:N) curve(a[i]+b[i]*(x),
from=min(year),
to=max(year),
add=TRUE,
col=col.alpha("black", 0.2))
sigma = runif(N, 0, 1)
mu = a+b*year
h = rnorm(N, mu, sigma)
plot(
NULL,
xlim=range(year),
ylim=c(100,200),
xlab="year",
ylab="height")
for (i in 1:N) curve(a[i]+b[i]*(x),
from=min(year),
to=max(year),
add=TRUE,
col=col.alpha("black", 0.2))
h
mu
year
b*year
b
class(b )
class(b)
plot(
NULL,
xlim=range(d2$weight),
ylim=c(-100,400),
xlab="weight",
ylab="height")
#### Adding Weight as Predictor ####
# including weight. previously we only approximated the distribution of heights
data(Howell1)
d <- Howell1
d2 <- d[d$age>=18,]
plot (d2$height~d2$weight)
# sampling and plotting from the prior
m4.3_plot <- function(a, b){
set.seed(2971)
N <-100 # 100lines
plot(
NULL,
xlim=range(d2$weight),
ylim=c(-100,400),
xlab="weight",
ylab="height")
abline( h=0,lty=2)
abline( h=272,lty=1,lwd=0.5)
mtext( "b~dnorm(0,10)")
xbar <-mean(d2$weight)
for (i in 1:N) curve(a[i]+b[i]*(x-xbar),
from=min(d2$weight),
to=max(d2$weight),
add=TRUE,
col=col.alpha("black", 0.2))
}
a <-rnorm(N,178,20)
b <-rnorm(N,0,10)
m4.3_plot(a,b)
for (i in 1:N) curve(a[i]+b[i]*(x),
from=min(d2$weight),
to=max(d2$weight),
add=TRUE,
col=col.alpha("black", 0.2))
for (i in 1:N) curve(a[i]+b[i]*(x-xbar),
from=min(d2$weight),
to=max(d2$weight),
add=TRUE,
col=col.alpha("black", 0.2))
for (i in 1:N) curve(a[i]+b[i]*(x-xbar),
from=min(d2$weight),
to=max(d2$weight),
add=TRUE,
col=col.alpha("black", 0.2))
# sampling and plotting from the prior
m4.3_plot <- function(a, b){
set.seed(2971)
N <-100 # 100lines
plot(
NULL,
xlim=range(d2$weight),
ylim=c(-100,400),
xlab="weight",
ylab="height")
abline( h=0,lty=2)
abline( h=272,lty=1,lwd=0.5)
mtext( "b~dnorm(0,10)")
xbar <-mean(d2$weight)
for (i in 1:N) curve(a[i]+b[i]*(x-xbar),
from=min(d2$weight),
to=max(d2$weight),
add=TRUE,
col=col.alpha("black", 0.2))
}
a <-rnorm(N,178,20)
b <-rnorm(N,0,10)
m4.3_plot(a,b)
# correcting the prior for b
b <-rlnorm(1e4,0,1)
# correcting the prior for b
b <-rlnorm(1e4,0,1)
dens(b, xlim=c(0,5), adj=0.1)
# choosing a different prior for b
b <-rlnorm(N,0,1)
m4.3_plot(a, b)
# define the average weight, x-bar
xbar <- mean(d2$weight)
# fit the model
m4.3 <-quap(
alist(
height ~ dnorm(mu,sigma),
mu <- a+b*(weight-xbar),
a ~ dnorm(178,20),
b ~ dlnorm(0,1),
sigma ~ dunif(0,50)
) ,data=d2)
precis(m4.3)
round( vcov(m4.3),3)
pairs(m4.3)
# sample and plot the posterior
plot(height~weight, data=d2, col=rangi2)
post <-extract.samples(m4.3)
a_map <-mean(post$a)
b_map <-mean(post$b)
curve( a_map+b_map*(x-xbar), add=TRUE)
post <- extract.samples(m4.3)
head(post)
# fitting the model
mN <-quap(
alist(
height ~dnorm(mu,sigma),
mu <-a+b*(weight-mean(weight)),
a ~dnorm(178,20),
b ~dlnorm(0,1),
sigma ~dunif(0,50)
) ,data=dN)
m4.3_model <- function(N){
#set.seed(42)
dN <-d2[1:N,]
# sampling some data
#dN <- sample_n(d2, size = N, replace=TRUE)
# fitting the model
mN <-quap(
alist(
height ~dnorm(mu,sigma),
mu <-a+b*(weight-mean(weight)),
a ~dnorm(178,20),
b ~dlnorm(0,1),
sigma ~dunif(0,50)
) ,data=dN)
# extract 20 samples from the posterior
post <- extract.samples(mN, n=20)
# display raw data and sample size
plot( dN$weight,dN$height,
xlim=range(d2$weight) ,ylim=range(d2$height),
col=rangi2 ,xlab="weight",ylab="height")
mtext(concat("N =",N))
# plot the lines, with transparency
for (i in 1:20)
curve( post$a[i]+post$b[i]*(x-mean(dN$weight)),
col=col.alpha("black",0.3) ,add=TRUE)
}
m4.3_model(N=100)
# fitting the model
mN <-quap(
alist(
height ~dnorm(mu,sigma),
#mu <-a+b*(weight-mean(weight)),
mu <- a+b*(weight),
a ~dnorm(178,20),
b ~dlnorm(0,1),
sigma ~dunif(0,50)
) ,data=dN)
m4.3_model <- function(N){
#set.seed(42)
dN <-d2[1:N,]
# sampling some data
#dN <- sample_n(d2, size = N, replace=TRUE)
# fitting the model
mN <-quap(
alist(
height ~dnorm(mu,sigma),
#mu <-a+b*(weight-mean(weight)),
mu <- a+b*(weight),
a ~dnorm(178,20),
b ~dlnorm(0,1),
sigma ~dunif(0,50)
) ,data=dN)
# extract 20 samples from the posterior
post <- extract.samples(mN, n=20)
# display raw data and sample size
plot( dN$weight,dN$height,
xlim=range(d2$weight) ,ylim=range(d2$height),
col=rangi2 ,xlab="weight",ylab="height")
mtext(concat("N =",N))
# plot the lines, with transparency
for (i in 1:20)
curve( post$a[i]+post$b[i]*(x-mean(dN$weight)),
col=col.alpha("black",0.3) ,add=TRUE)
}
m4.3_model(N=100)
m4.3_model(N=100)
# fit the model
m4.3 <-quap(
alist(
height ~ dnorm(mu,sigma),
mu <- a+b*(weight-xbar),
a ~ dnorm(178,20),
b ~ dlnorm(0,1),
sigma ~ dunif(0,50)
) ,data=d2)
precis(m4.3)
# fit the model
m4.3 <-quap(
alist(
height ~ dnorm(mu,sigma),
#mu <- a+b*(weight-xbar),
mu <- a+b*(weight),
a ~ dnorm(178,20),
b ~ dlnorm(0,1),
sigma ~ dunif(0,50)
) ,data=d2)
precis(m4.3)
m4.3_no_xbar <- quap(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*(weight),
a ~ dnorm(178,20)
b ~ dlnorm(0,1),
sigma ~ dunif(0, 50)
), data=d2
)
# fit the model
m4.3 <-quap(
alist(
height ~ dnorm(mu,sigma),
mu <- a+b*(weight),
a ~ dnorm(178,20),
b ~ dlnorm(0,1),
sigma ~ dunif(0,50)
) ,data=d2)
# fit the model
m4.3 <-quap(
alist(
height ~ dnorm(mu,sigma),
mu <- a+b*(weight),
a ~ dnorm(178,20),
b ~ dlnorm(0,1),
sigma ~ dunif(0,50)
) ,data=d2)
# fit the model
m4.3 <-quap(
alist(
height ~ dnorm(mu,sigma),
mu <- a+b*(weight-xbar),
a ~ dnorm(178,20),
b ~ dlnorm(0,1),
sigma ~ dunif(0,50)
) ,data=d2)
precis(m4.3)
m4.3_no_xbar <- quap(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*(weight),
a ~ dnorm(178,20)
b ~ dlnorm(0,1),
sigma ~ dunif(0, 50)
), data=d2
)
m4.3_no_xbar <- quap(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*(weight),
a ~ dnorm(178,20)
b ~ dlnorm(0,1),
sigma ~ dunif(0, 50)
), data=d2)
m4.3_no_xbar <- quap(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*(weight),
a ~ dnorm(178,20),
b ~ dlnorm(0,1),
sigma ~ dunif(0, 50)
), data=d2)
precis(m4.3_no_xbar)
precis(m4.3)
round(vcov(m4.3), 3)
round(vcov(m4.3_no_xbar), 3)
#### 4M7 ####
library(rethinking)
data(Howell1)
d <- Howell1
d2 <- d[d$age>=18,]
plot (d2$height~d2$weight)
# define the average weight, x-bar
xbar <- mean(d2$weight)
# fit the model including xbar
m4.3 <-quap(
alist(
height ~ dnorm(mu,sigma),
mu <- a+b*(weight-xbar),
a ~ dnorm(178,20),
b ~ dlnorm(0,1),
sigma ~ dunif(0,50)
) ,data=d2)
# fit the model omitting xbar
m4.3_no_xbar <- quap(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*(weight),
a ~ dnorm(178,20),
b ~ dlnorm(0,1),
sigma ~ dunif(0, 50)
), data=d2)
precis(m4.3)
precis(m4.3_no_xbar)
post_xbar <- extract.samples(m4.3)
post_no_xbar <- extract.samples(m4.3_no_xbar)
post_xbar$a
mean(post_xbar$a)
plot(height~weight, data=d2, col=rangi2)
curve(a_xbar+b_xbar(x-xbar), add=TRUE)
post_xbar <- extract.samples(m4.3)
post_no_xbar <- extract.samples(m4.3_no_xbar)
a_xbar <- mean(post_xbar$a)
a_no_xbar <- mean(post_no_xbar$a)
b_xbar <- mean(post_xbar$b)
b_no_xbar <- mean(post_no_xbar$b)
plot(height~weight, data=d2, col=rangi2)
curve(a_xbar+b_xbar(x-xbar), add=TRUE)
b_xbar <- mean(post_xbar$b)
b_no_xbar <- mean(post_no_xbar$b)
plot(height~weight, data=d2, col=rangi2)
curve(a_xbar+b_xbar(x-xbar), add=TRUE)
curve(a_xbar+b_xbar*(x-xbar), add=TRUE)
curve(a_no_xbar+b_no_xbar*(x), add=TRUE)
weights <- seq(30, 60, length.out=300)
link(weights, m4.3_no_xbar)
link(m4.3_no_xbar, data=data.frame(weight=seq(30, 70, by=1)))
mu <- link(m4.3_no_xbar, data=data.frame(weight=seq(30, 70, by=1)))
mean(mu)
weight.seq <- seq(30, 70, by=1)
mu <- link(m4.3_no_xbar, data=data.frame(weight=weight.seq))
plot(mu ~weight.seq, add=T)
mu <- link(m4.3_no_xbar, data=data.frame(weight=weight.seq))
nrow(mu)
nrow(weight.seq)
len(weight.seq)
weight.seq <- seq(30, 70, by=1)
len(weight.seq)
nrow(weight.seq)
size(weight.seq)
class(mu)
mu.PI
PI(mu)
mu.PI <- apply(mu, PI, 2, prob=.89)
shade(mu.PI, weight.seq)
mu.PI <- apply(mu, PI, 2, prob=.89)
shade(mu.PI, weight.seq)
mu.PI <- apply(mu, 2,  PI, prob=.89)
shade(mu.PI, weight.seq)
weight.seq <- seq(30, 70, by=1)
mu <- link(m4.3, data=data.frame(weight=weight.seq))
mu.PI_xbar <- apply(mu, 2,  PI, prob=.89)
shade(mu.PI_xbar, weight.seq)
# simulating some data
sim.height_xbar <- sim(m4.3, data=list(weight=weight.seq))
sim.height_no_xbar <- sim(m4.3_no_xbar, data=list(weight=weight.seq))
height.PI_no_xbar <- apply(sim.height_no_xbar, 2, PI, prob=0.5)
height.PI_xbar <- apply(sim.height_xbar, 2, PI, prob=0.5)
shade(height.PI_no_xbar, weight.seq)
shade(height.PI_xbar, weight.seq)
#### 4M7 ####
library(rethinking)
data(Howell1)
d <- Howell1
d2 <- d[d$age>=18,]
plot (d2$height~d2$weight)
# define the average weight, x-bar
xbar <- mean(d2$weight)
# fit the model including xbar
m4.3 <-quap(
alist(
height ~ dnorm(mu,sigma),
mu <- a+b*(weight-xbar),
a ~ dnorm(178,20),
b ~ dlnorm(0,1),
sigma ~ dunif(0,50)
) ,data=d2)
precis(m4.3)
round( vcov(m4.3),3)
pairs(m4.3)
# fit the model omitting xbar
m4.3_no_xbar <- quap(
alist(
height ~ dnorm(mu, sigma),
mu <- a + b*(weight),
a ~ dnorm(178,20),
b ~ dlnorm(0,1),
sigma ~ dunif(0, 50)
), data=d2)
precis(m4.3_no_xbar)
round(vcov(m4.3_no_xbar), 3)
# sampling mu from the posterior
post <-extract.samples(m4.3)
# sampling mu from the posterior
post <-extract.samples(m4.3)
a_map <-mean(post$a)
b_map <-mean(post$b)
curve( a_map+b_map*(x-xbar), add=TRUE)
# sampling mu from the posterior
post_xbar <- extract.samples(m4.3)
post_no_xbar <- extract.samples(m4.3_no_xbar)
a_xbar <- mean(post_xbar$a)
a_no_xbar <- mean(post_no_xbar$a)
b_xbar <- mean(post_xbar$b)
b_no_xbar <- mean(post_no_xbar$b)
# plotting the MAP and compatibility intervals
plot(height~weight, data=d2, col=rangi2)
curve(a_xbar+b_xbar*(x-xbar), add=TRUE)
curve(a_no_xbar+b_no_xbar*(x), add=TRUE)
weight.seq <- seq(30, 70, by=1)
mu <- link(m4.3, data=data.frame(weight=weight.seq))
mu.PI_xbar <- apply(mu, 2,  PI, prob=.89)
shade(mu.PI_xbar, weight.seq)
mu <- link(m4.3_no_xbar, data=data.frame(weight=weight.seq))
mu.PI_no_xbar <- apply(mu, 2,  PI, prob=.89)
shade(mu.PI_no_xbar, weight.seq)
# simulating some data
sim.height_xbar <- sim(m4.3, data=list(weight=weight.seq))
sim.height_no_xbar <- sim(m4.3_no_xbar, data=list(weight=weight.seq))
height.PI_xbar <- apply(sim.height_xbar, 2, PI, prob=0.5)
height.PI_no_xbar <- apply(sim.height_no_xbar, 2, PI, prob=0.5)
shade(height.PI_no_xbar, weight.seq)
shade(height.PI_xbar, weight.seq)
shade(height.PI_no_xbar, weight.seq, col = col.alpha(rangi2))
precis(m4.3_no_xbar)
precis(m4.3)
